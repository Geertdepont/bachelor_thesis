---
layout: post
title: "The state of the app should be defined in the Models only, whereas Views and ViewModels should be stateless"
guideline_id: 8
short_description: "The state of the app should be defined in the Models only."
date:   2019-05-21 01:00:07 +0200
categories: mvvm
icon: "icon-search"
doc: "Instead of emitting a stream for each feature of the model, emit the whole model. This results in up-to-date models."
---

<h3>Why?</h3>
Instead of emitting a stream for each feature of the model, emit the whole model. This results in up-to-date models.

<h3>Example</h3>
We created a simple [MVVM example][architecture-example]{:target="_blank"}.

When we display all the notes. We display all the features of note of each note encapsulated 
in a LiveData object. This stream will emit every time a change happens in this object.

<script src="https://gist.github.com/Geertdepont/f052953dfaf8a19a8be395b55aaa5da5.js"></script>

Check this [page][architecture-example]{:target="_blank"} to view the complete repository.

<a href="https://github.com/Geertdepont/bachelor_thesis/tree/master/ArchitectureExamples" target="_blank"><button type="button" class="btn btn-primary btn-icon-right">Go to the github page</button></a>

This guideline was extracted from:
<table id="guidelinelinks">
  <tr>
    <th>Id</th>
    <th>Guideline</th>
    <th>URL</th>
  </tr>
    <tr>
      <td>263</td>
      <td>[MVVM] we are creating model objects to hold the state of the data. This also allows a higher degree of testability and control of the data that is emitted by the ViewModel.</td>
     <td><a href="https://medium.com/upday-devs/android-architecture-patterns-part-3-model-view-viewmodel-e7eeee76b73b" target="_blank">https://medium.com/upday-devs/android-architecture-patterns-part-3-model-view-viewmodel-e7eeee76b73b</a></td>
    </tr>   
  
</table>

[architecture-example]: https://github.com/Geertdepont/bachelor_thesis/tree/master/ArchitectureExamples