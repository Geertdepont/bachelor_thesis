---
layout: post
title: "Access (and cache) the data provided by Models via app-scoped dedicated components."
guideline_id: 18
short_description: "Data provided by Models via app-scoped dedicated components."
date:   2019-05-21 01:00:24 +0200
categories: MVP
---
<h3>Why?</h3>
When developing an Android app, a common issue which might
emerge is related to restoring the state of Views. This issue
can be solved by adapting slightly the architecture of apps.
Specifically a data manager component (e.g., a data store or
Jetpack Repository) can be introduced. This component is
responsible for data related tasks such as fetching data from the
network, caching results or returning already cached data. By
scoping such component at the app level and not at the one of
single Activities, issues relative to restoring View states, e.g.,
in the occurrence of a screen orientation change, are solved
through an architecturally maintainable solution.


<h3>Example</h3>
We created a simple [application][github-page] which retrieves employees from this url: http://dummy.restapiexample.com/api/v1/

If the employees were already retrieved within 5000 milliseconds, the repository returns the 
cache instead of making a new API request.	

<figure>
  <img src="/assets/BossApplication_lifecycle.png" alt="Login Injection" width="700">
</figure>

In the mainActivity when the button is clicked, the function showEmployees is called from the 
MainPresenter. 

<script src="https://gist.github.com/Geertdepont/64ab029fdf46c051eae227887eec24cf.js"></script>

The MainPresenter then asks the repository to show the users, which it will listen to with using 
the onSuccess or onError function. 

<script src="https://gist.github.com/Geertdepont/e8e9996406425a39462b5f03ec0896ff.js"></script>

The repository contains a EmployeeService which makes API requests and a 
EmployeeCache. 

https://gist.github.com/Geertdepont/6ecccdffb113b1b2e581775384f4bc6c

When the getList() function from the Repository is called.
It checks if the cache is still valid. That is if the data was recently updated and not null.

<script src="https://gist.github.com/Geertdepont/e484aa2688cac63a9284cc156da2a000.js"></script>

If not, then a new listener is created. Which is used during the API request.

<script src="https://gist.github.com/Geertdepont/6ecccdffb113b1b2e581775384f4bc6c.js"></script>

This results in a faster response.

Check out the [Github page][github-page] to view the complete repository.

[github-page]: https://github.com/Geertdepont/bachelor_thesis/tree/master/Bossapplication