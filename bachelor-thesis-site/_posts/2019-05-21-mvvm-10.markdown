---
layout: post
title: "Networking or data access functionalities should be performed exclusively by Models"
guideline_id: 10
short_description: "Networking or data access functionalities should be performed by Models."
date:   2019-05-21 01:00:05 +0200
categories: mvvm
icon: "icon-rss"
doc: "Performing data functionalities by models, results into smaller ViewModels/Views. 
      It also makes testing the whole architecture easier since each component can be tested separately."
---
<h3>Description</h3>
Performing data functionalities by models, results into smaller ViewModels/Views. 
It also makes testing the whole architecture easier. 
Since each component can be tested separately. 
Instead of asserting that a View needs to behave after a certain retrieval from the model, the model now can be tested independently.


<h3>Example</h3>
We created a simple [MVVM-Example][MVVM-example]{:target="_blank"}.

We use for this example Rxjava in combination with retrofit.
	Sometimes it is necessary to have nested callbacks.
Like in this example, where we want to find the contributors of our repository.
We need to know which repositories there are before we can look up, the contributors of the repository.

<script src="https://gist.github.com/Geertdepont/8c25c0bd952d904f8619eb50ead4a9d2.js"></script>

Our methods getRepositories() and getContributors(String repo), both return observable 
Values. Which means that this values can be viewed by an Observer, which we need to 
Implement.

<script src="https://gist.github.com/Geertdepont/376c0d8f6049cc1597f5d5ef4a150fa0.js"></script>

We then create a Retrofit class, which returns a Retrofit instance, which will perform our API 
requests to “”https://api.github.com/”” 

In our repository, we will return our A Single object. Which either emits one value, or an error 
message. 

<script src="https://gist.github.com/Geertdepont/8232872ba1dcfb6d7b81bb50114c3dd1.js"></script>

This getContributorList() performs for each Repository a new request.
Repo -> myApi.getContributors(repo.getName())
It then sorts all the results and puts them in a List.

<figure>
  <img src="/assets/RXJava_depicted.png" alt="RxJava depicted" width="90%">
</figure>

The repository is the only module which performs <b> Networking </b> functionalities.

Check this [page][MVVM-example]{:target="_blank"} to view the complete repository.

<a href="https://github.com/Geertdepont/bachelor_thesis/tree/master/RxjavaRetrofitGithub" target="_blank"><button type="button" class="btn btn-primary btn-icon-right">Go to the github page</button></a>

[MVVM-example]: https://github.com/Geertdepont/bachelor_thesis/tree/master/RxjavaRetrofitGithub