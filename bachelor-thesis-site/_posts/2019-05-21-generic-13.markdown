---
layout: post
title: "Take into consideration the lifecycle of Android components (e.g., Activities and Services) – also with respect to other components – and design them
        as short-lived entities."
guideline_id: 13
short_description: "Lifecycle of android components"
date:   2019-05-21 01:00:29 +0200
categories: Generic
---
<h3>Why?</h3>
Each android component has a lifecycle. Without taking them in consideration, your app might crash, or unexpected activities might occur. 
Also since activities are constantly being destroyed, referencing them could lead to memory leaks. 
Using lifecycle aware components reduces much of this complexity. 

<h3>Example</h3>
For this example we will look at the [Book example][Book-example].
Whenever we flip our phone, our BookListActivity gets destroyed.
	This means that any reference to the BookListActivity needs to be destroyed as well.

<figure>
  <img src="/assets/PresenterLifeCycle.png" alt="MVVM depicted" width="300">
</figure>

This is most important otherwise we get memory leaks.
So in our BookListActivity we override the onDestroy() method.

<script src="https://gist.github.com/Geertdepont/4346b4cad88dc70c8a6babdd165fa75f.js"></script>

<script src="https://gist.github.com/Geertdepont/635410e638efae37801dc53927e2acb1.js"></script>

Check out the [Book-example][Book-example] to view the complete repository.

[Book-example]: https://github.com/Geertdepont/bachelor_thesis/tree/master/BookApplication