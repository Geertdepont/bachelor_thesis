---
layout: post
title: "Strive towards separation of concerns in your architecture, where each component has well defined responsibility boundaries, a purpose, (set of)
        functionality, and configuration."
short_description: "Separation of concerns in your architecture"
guideline_id: 4
date:   2019-05-21 01:00:38 +0200
categories: generic
---
<h3>Why?</h3>

Architectural components of an app should
have a single, well defined, responsibility. As a component
grows bigger, it should be split up. By following the single
responsibility principle, the app architecture naturally supports
the structure of developer teams and development stages.
Additionally, monoliths are detected in the early stages and
modules become testable in isolation. Finally, if the app is built
using Gradle, modularization can improve the performance of
the build process and ease the development of Instant apps
.
It is important to notice that, while modularization may imply
little effort if considered early in the project, it might become
an extremely expensive process in later development stages

<h3>Example</h3>
We created a simple [MVP login Application][github-page]{:target="_blank"}. 
The AuthComponent has one responsibility: Inject the specified modules after login. 
There are two activities that can take place after login:

<ul>
<li>Get a greeting</li>
<li>View other users</li>
</ul>

So for both of these activities we create a component. A <b>GreetComponent</b> and a <b>ViewUserComponent</b>.
The <b>GreetComponent</b> injects everything that is needed for the GreetActivity.
The <b>ViewUserComponent</b> injects everything that is needed for the ViewUserActivity.

We will only look at the <b>GreetComponent</b>.
The <b>GreetComponent</b> uses the <b>GreetModule</b>. Which should provide everything the GreetActivity needs.
<script src="https://gist.github.com/Geertdepont/f5f4acc6f143210c79305f7b58100a47.js"></script>

As we can see the GreetActivity needs a GreetPresenter. The GreetPresenter needs a GreetView and Credentials.

<script src="https://gist.github.com/Geertdepont/7d81c4202d16157d0bd7d0c5a90d4f5d.js"></script>

So all of this needs to be specified in the GreetModule.

<script src="https://gist.github.com/Geertdepont/fb6218336aa43df01f54a736ada4865f.js"></script>

The GreetPresenter calls the showMessage(mCredentials.getPersonalizedGreeting()) on the <b>GreetView</b>.
This way each Architectural component has a single well defined responsibility.
If we did not create a specific AuthComponent for this, we had to put everything into the AppComponent. 
Which would then have too many responsibilities.

<figure>
  <img src="/assets/AppComponentWithoutAuth.png" alt="AppComponent without AuthComponent" width="500">
</figure>

<a href="https://github.com/Geertdepont/bachelor_thesis/tree/master/MVPLogin" target="_blank"><button type="button" class="btn btn-primary btn-icon-right">Go to the github page</button></a>

[github-page]: https://github.com/Geertdepont/bachelor_thesis/tree/master/MVPLogin
