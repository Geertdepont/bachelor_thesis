---
layout: post
title: "Presenters should be Android- and framework-independent."
guideline_id: 17
short_description: "Presenters should be Android- and framework-independent."
date:   2019-05-21 01:00:25 +0200
categories: MVP
---
<h3>Why?</h3>
To abstract Presenter components
from the implementation details, Presenters should ideally
avoid dependencies to the Android framework. This also
entails not creating a lifecycle in Presenters, as it may hinder
their maintainability and evolvability. In order to access app
resources and preferences, View and Model components can
be used instead, respectively. Additionally, by developing
Presenters as only dependent on Java, the testability of
Presenters drastically improves, as now non-instrumented
unit-test cases can be written for such components.

<h3>Example</h3>
We created a simple [application][github-page] which retrieves employees from this url: http://dummy.restapiexample.com/api/v1/

The event diagram of the Boss Application:
<figure>
  <img src="/assets/BossApplication_lifecycle.png" alt="Login Injection" width="700">
</figure>

Each component can easily be tested. 
	Since the MainPresenter has no actual reference to the MainActivity the 
MainPresenter is Android-independent making the presenter testable without an emulator.

<script src="https://gist.github.com/Geertdepont/e8e9996406425a39462b5f03ec0896ff.js"></script>

Check out the [Github page][github-page] to view the complete repository.

[github-page]: https://github.com/Geertdepont/bachelor_thesis/tree/master/Bossapplication

