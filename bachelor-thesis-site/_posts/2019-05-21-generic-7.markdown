---
layout: post
title: "Take full advantage of libraries. Do not try to reinvent the wheel and loose time by implementing boilerplate code. Focus on what makes your app stand
        out from the rest and delegate what is left to libraries."
guideline_id: 7
short_description: "Take advantage of libraries"
date:   2019-05-21 01:00:35 +0200
categories: Generic
---
<h3>Why?</h3>
Taking full advantage of libraries not only saves time, but could also be an improvement of 
your own implementation. However do check the ratings of the library or dive into the code, to 
see that you are working with high quality and bug free code.

<h3>Example</h3>
We created a simple [MVVM example][MVVM-example]. 
This example uses RxJava. Which is a library for creating and 
receiving asynchronous calls by creating Observers and Observables.

<script src="https://gist.github.com/Geertdepont/047f1270a4745522b26927ae208eabfe.js"></script>

In the getContributorList() method, we actually perform multiple API requests.
myAPI.getRepositories() returns the Repositories from my github account.
Then .flatMapIterable(x -> x) flattens a stream of iterables. Then for each repository, we fetch 
the contributors, and sort them based on the amount of contributions.

If we had to write this code without RxJava, we would end up with a for loop within two nested callbacks. 
Which would lead to ugly code.


Check out the [MVVM example][MVVM-example] to view the complete repository.

[MVVM-example]: https://github.com/Geertdepont/bachelor_thesis/tree/master/RxjavaRetrofitGithub