---
layout: post
title:  "Views should always know about changes after ViewModels, no matter how trivial an operation may be."
short_description: "Views should always know about changes after ViewModels"
guideline_id: 32
short_description: "Views should always know about changes after ViewModels"
date:   2019-05-21 01:00:10 +0200
categories: MVVM
---
<h3>Why?</h3>
Adhering to this guideline implies that all the logic
in the Views should be moved to the ViewModels. While the
purpose of ViewModels is to pre-process data to be ready
to use by Views, it might be tempting to implement minor
operations in Views. Nevertheless, adhering to this guideline
guarantees a higher level of consistency and reliability of all
the components which are based on the ViewModels.



<h3>Example</h3>
We created a simple [MVVM example][architecture-example].

Our viewModel provides all the data for the View.
When a new note is added to the model, the list of notes has been changed, and a new stream from the model to the viewModel is passed.
The View observes this changed list and updates the view.


<script src="https://gist.github.com/Geertdepont/06e30ce3516c8ad36134543c9cbfe036.js"></script>

<script src="https://gist.github.com/Geertdepont/0cf01c5b3504ad226e946d261908cf44.js"></script>


Check this [page][architecture-example] to view the complete repository.

[architecture-example]: https://github.com/Geertdepont/bachelor_thesis/tree/master/ArchitectureExample