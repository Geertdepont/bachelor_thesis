---
layout: post
title: "Avoid to delegate too many responsibilities to Presenters, as they have the tendency to become bloat classes."
guideline_id: 21
short_description: "Avoid too many responsibilities in the Presenters"
date:   2019-05-21 01:00:21 +0200
categories: MVP
---
<h3>Why?</h3>
When delegating the responsibilities from the View to 
the Presenter a common pitfall is that the Presenter has to perform too many activities. 
Donâ€™t let the Presenter have a direct connection with the database. 
Use are Repository to return the data. Keep presenters as simple as possible.

<h3>Example</h3>
We created a simple [MVP login Application][github-page].

The only job of our Presenters is to provide the views with data received from the model.
And handle each user-action accordingly.  

<script src="https://gist.github.com/Geertdepont/f6ab7f5dd5fea041ce3b6af93a583db7.js"></script>

In our case the data is also requested from the model, so it just has to wait, to present the 
view with the data. Also the received data is already formatted the way the MainPresenter and the MainView want it.


Check out the [Github page][github-page] to view the complete repository.

[github-page]: https://github.com/Geertdepont/bachelor_thesis/tree/master/MVPLogin