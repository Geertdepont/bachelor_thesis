---
layout: post
title: "Inject dependencies to Presenters into the Views when instantiating the Presenters, as this reduces coupling issues and null checks."
guideline_id: 25
short_description: "Inject dependencies to Presenters into the Views"
date:   2019-05-21 01:00:17 +0200
categories: mvp
doc: "Injecting presenters using Dagger reduces null checks and setPresenter() methods. 
      Whenever an activity is used, Dagger couples the view with the Presenter.
       Which ultimately results into clearer code."

---
<h3>Why?</h3>
Injecting presenters using Dagger reduces null checks and setPresenter() methods. 
Whenever an activity is used, Dagger couples the view with the Presenter.
 Which ultimately results into clearer code.



<h3>Example</h3>
We created a simple [MVP login Application][github-page]{:target="_blank"}.

The ViewUserModule provides the ViewUserComponent with the ViewUserPresenter.

<script src="https://gist.github.com/Geertdepont/bb5770a60eff27f2da993c3f46a140d0.js"></script>

This ViewUserPresenter gets initialized with the viewUsersView. Which is added when the 
module is instantiated.

<script src="https://gist.github.com/Geertdepont/6bfd1948147766a44579173049aaa979.js"></script>

Which happens in the viewUsersActivity.	So whenever a new Presenter is created, the Presenter always has a relationship with a view. So this is never null.

Check out the [Github page][github-page]{:target="_blank"} to view the complete repository.

<a href="https://github.com/Geertdepont/bachelor_thesis/tree/master/MVPLogin" target="_blank"><button type="button" class="btn btn-primary btn-icon-right">Go to the github page</button></a>

[github-page]: https://github.com/Geertdepont/bachelor_thesis/tree/master/MVPLogin