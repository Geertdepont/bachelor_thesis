---
layout: post
title: " If necessary, retain fragments for avoiding memory leaks due to configuration changes in the activities."
guideline_id: 27
short_description: "Retain fragments for avoiding memory leaks"
date:   2019-05-21 01:00:15 +0200
categories: mvp
icon: "icon-save"
doc: "Fragments are destroyed and recreated with their parent Activity.
      The setRetainInstance in a fragment, allows us to skip this cycle.
      The fragment is then retained. This is used to avoid memory leaks."

---
<h3>Why?</h3>
Fragments are destroyed and recreated with their parent Activity.
The setRetainInstance in a fragment, allows us to skip this cycle.
The fragment is then retained. This is used to avoid memory leaks.


<h3>Example</h3>
Due to time issues, I did not create an example for retaining fragments, but here is a good example.

<script src="https://gist.github.com/Geertdepont/d86d93767d2f95073716f3c926720d5a.js"></script>


<script src="https://gist.github.com/Geertdepont/9f0fd8ea570f16fcc05df5c091fd7873.js"></script>

If the fragment already started before, then it does not have to be created. 


Check this [page][github-page]{:target="_blank"} to view the complete repository.

<a href="https://www.androiddesignpatterns.com/2013/04/retaining-objects-across-config-changes.html" target="_blank"><button type="button" class="btn btn-primary btn-icon-right">Go to the github page</button></a>

This guideline was extracted from:
<table id="guidelinelinks">
  <tr>
    <th>Id</th>
    <th>Guideline</th>
    <th>URL</th>
  </tr>
    <tr>
      <td>109</td>
      <td>A comment on MVP (Model View Presenter) from previous example: I found tricky to avoid leaks due to activities and fragments being recreated so I used a poor man solution: retain fragments.</td>
     <td><a href="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" target="_blank">https://fernandocejas.com/2018/05/07/architecting-android-reloaded/</a></td>
    </tr> 
     
</table>

[github-page]: https://www.androiddesignpatterns.com/2013/04/retaining-objects-across-config-changes.html
