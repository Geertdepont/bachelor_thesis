---
layout: post
title: "Use exclusively interfaces to let app modules communicate. This protects the architectural structure and helps defining a clear responsibility of modules."
guideline_id: 9
short_description: "Use interfaces"
date:   2019-05-21 01:00:33 +0200
categories: Generic
---
<h3>Why?</h3>
Using interfaces for linking modules, is a great way for module communication. 
This way modules can’t access methods that are not declared in the interface. 
And helps define a clear overview of what each module does. 
Using interfaces for linking modules, is a great way for module communication. 
This way modules can’t access methods that are not declared in the interface. 
And helps define a clear overview of what each module does. 

<h3>Example</h3>
We created a simple [application][github-page] which retrieves employees from this url: http://dummy.restapiexample.com/api/v1/

If we take a look at the Presenter and Repository modules, we see they communicate 
exclusively via interfaces. 
The MainPresenter implements the OnViewEmployeesFinishedListener.

<script src="https://gist.github.com/Geertdepont/6ecccdffb113b1b2e581775384f4bc6c.js"></script>

The MainPresenter then calls the getList giving itself as parameter.
The Repository communicates back by calling the methods of the
OnViewEmployeesFinishedListener interface.

OnError() is called if there does not exists a cache and the service does not work.
OnSuccess() is called if the data is successfully retrieved from cache, or is newly retrieved from the network.


[github-page]: https://github.com/Geertdepont/bachelor_thesis/tree/master/Bossapplication